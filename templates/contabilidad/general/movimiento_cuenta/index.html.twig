{% extends 'contabilidad/general/index.html.twig' %}
{% block style %}
    <style>
        label {
            display: none;
        }
    </style>
{% endblock %}
{% block content %}
    <div class="container-fluid">

        {# header #}
        <div class="d-flex align-items-center">
            <h6 class="display-4 mb-0 mr-2 title-table text-light">
                Movimiento de Cuentas
            </h6>
            <input type="number" class="mr-auto mt-2" style="width:80px" id="anno" name="anno">
            <div class="bg-dark-app">
                <label for="" class="text-white text-uppercase font-weight-bold" id="saldo_inicial">saldo
                    inicial:</label>
            </div>
            <button type="button" id="movimiento_cuenta_buscar" name="movimiento_cuenta[buscar]"
                    class="ml-auto btn-primary btn text-uppercase" style="width:100px" onclick="getDataByParams()">
                Buscar
            </button>
        </div>

        {{ form_start(form,{'attr': {'class': 'text-left','id':'form_modal_target','method':'POST','autocomplete':"off"}}) }}
        <div class="mt-0 row" id="row-id">
            <div class="form-group input-group input-group-sm col-2">
                {{ form_widget(form.nro_cuenta,{'attr': {'class': 'form-control w-100'}}) }}
            </div>
            <div class="form-group mt-0 input-group input-group-sm col-2">
                {{ form_widget(form.nro_subcuenta,{'attr': {'class': 'form-control w-100'}}) }}
            </div>
            <div class="form-group mt-0 input-group input-group-sm col-2">
                {{ form_widget(form.periodo,{'attr': {'class': 'form-control w-100'}}) }}
            </div>

            <div class="form-group mt-0 input-group input-group-sm col-2">
                {{ form_widget(form.centro_costo,{'attr': {'class': 'form-control w-100'}}) }}
            </div>
            <div class="form-group mt-0 input-group input-group-sm col-2">
                {{ form_widget(form.orden_trabajo,{'attr': {'class': 'form-control w-100'}}) }}
            </div>
            <div class="form-group mt-0 input-group input-group-sm col-2">
                {{ form_widget(form.elemento_gasto,{'attr': {'class': 'form-control w-100'}}) }}
            </div>
            <div class="form-group mt-0 input-group input-group-sm col-2">
                {{ form_widget(form.expediente,{'attr': {'class': 'form-control w-100'}}) }}
            </div>
            <div class="form-group mt-0 input-group input-group-sm col-2">
                {{ form_widget(form.almacen,{'attr': {'class': 'form-control w-100'}}) }}
            </div>
            <div class="form-group mt-0 input-group input-group-sm col-2">
                {{ form_widget(form.unidad,{'attr': {'class': 'form-control w-100'}}) }}
            </div>
            {{ form_end(form) }}
        </div>
        {# end header #}


        {# list #}
        <table class="table-small-rows table table-hover text-light" id="dashboard">
            <thead class="thead-dark">
            <th width="100px" class="pr-0 pl-0 text-center">Tipo</th>
            <th width="100px" class="pl-0 text-center pr-0">Número</th>
            <th width="200px" class="pl-0 text-center pr-0">Documento</th>
            <th width="200px" class="pl-0 text-center pr-0">Débito</th>
            <th width="200px" class="pl-0 text-center pr-0">Crédito</th>
            <th width="200px" class="pl-0 text-center pr-0">Saldo</th>
            </thead>
            <tbody id="rows_datos">
            </tbody>
        </table>
        {# end list #}
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script>
        //DECLARACION DE VARIABLES
        let cbx_centro_costo = $('#movimiento_cuenta_centro_costo')
        let cbx_elemento_gasto = $('#movimiento_cuenta_elemento_gasto')
        let cbx_expediente = $('#movimiento_cuenta_expediente')
        let cbx_almacen = $('#movimiento_cuenta_almacen')
        let cbx_orden_trabajo = $('#movimiento_cuenta_orden_trabajo')
        let cbx_unidad = $('#movimiento_cuenta_unidad')
        let anno = new Date().getFullYear();
        let mes = new Date().getMonth();
        let cuenta = [];
        let arr_meses = ['Acumulado', 'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre']
        const form_modal_target = $('#form_modal_target')
        $('#anno').val(anno)

        ///Validacion de los campos obligatorios para la busqueda
        form_modal_target.validate({
            errorClass: 'invalid-label-orange',
            errorPlacement: function (error, element) {
                error.attr('style', 'font-size: .8rem;')
                error.insertAfter(element);
            },
            rules: {
                'anno': "required",
                'movimiento_cuenta[nro_cuenta]': "required",
                'movimiento_cuenta[periodo]': "required",

            },
            messages: {
                'anno': 'Obligratorio!',
                'movimiento_cuenta[nro_cuenta]': 'Obligratorio!',
                'movimiento_cuenta[periodo]': 'Obligratorio!',
            }
        })

        $(document).ready(function (event) {
            $('#anno').on('keyup', function (event) {
                $('#dashboard').find('td').remove()
                $('#saldo_inicial').hide()
                if (event.which == 13) {
                    resetForm()
                    $('#movimiento_cuenta_periodo').find('option').remove()
                    $('#movimiento_cuenta_periodo').prepend('<option selected = "false" value = "0" disabled> -- Período -- </option>');
                    if ($('#anno').val() == anno) {
                        for (let i = 0; i < mes + 2; i++) {
                            $('#movimiento_cuenta_periodo').append('<option value = ' + i + '>' + arr_meses[i] + '</option>');
                        }
                    }
                    if ($('#anno').val() > anno || $('#anno').val() == '') {
                        alertTemplate('El mayor número permitido es ' + anno + '.', 'danger')
                        $('#anno').val(anno)
                        resetForm()
                    } else {
                        for (let i = 0; i < 13; i++) {
                            $('#movimiento_cuenta_periodo').append('<option value = ' + i + '>' + arr_meses[i] + '</option>');
                        }
                    }
                }
            })

            //Evento que se ejecuta cuando se cambia la seleccion de la cuenta
            $('#movimiento_cuenta_nro_cuenta').on('change', function () {
                $('#movimiento_cuenta_nro_subcuenta').find('option').remove()
                cuenta.forEach(function (valor, pos) {
                    if ($('#movimiento_cuenta_nro_cuenta').val() == valor.nro_cuenta) {
                        $('#movimiento_cuenta_nro_subcuenta').prepend('<option selected = "false" value = "0" disabled> -- seleccione -- </option>');
                        for (var i = 0; i < valor.sub_cuenta.length; i++) {
                            $('#movimiento_cuenta_nro_subcuenta').append('<option value = "' + valor.sub_cuenta[i]['nro_subcuenta'] + '">' + valor.sub_cuenta[i]['nro_subcuenta'] + '</option>');
                        }
                    }
                })

                miniLoadin.show({msg: 'Cargando firltros...', target: '#row-id'})
                $.ajax({
                    url: '/contabilidad/config/cuenta/get-criterios/' + $(this).val(),
                    method: 'POST',
                    dataType: 'json',
                    success: function (result) {
                        cl(result)

                        if (result.success) {
                            hiddenParents()
                            result.data.forEach(data => {
                                switch (data) {
                                    case "CCT":
                                        cbx_centro_costo.parent().show()
                                        break
                                    case "EG":
                                        cbx_elemento_gasto.parent().show()
                                        cl('dentro')
                                        break
                                    case "EXP":
                                        cbx_expediente.parent().show()
                                        break
                                    case "ALM":
                                        cbx_almacen.parent().show()
                                        break
                                    case "OT":
                                        cbx_orden_trabajo.parent().show()
                                        break
                                    case "UNID":
                                        cbx_unidad.parent().show()
                                        break
                                }
                            })
                            miniLoadin.close()
                        }


                    }
                })
            })
        })

        function hiddenParents() {
            cbx_centro_costo.parent().hide()
            cbx_elemento_gasto.parent().hide()
            cbx_expediente.parent().hide()
            cbx_almacen.parent().hide()
            cbx_unidad.parent().hide()
            cbx_orden_trabajo.parent().hide()
        }

        function resetForm() {
            $('#saldo_inicial').hide()
            $('#dashboard').find('td').remove()
            //ocultar los combobox
            $('#movimiento_cuenta_nro_cuenta').find('option').remove()
            $('#movimiento_cuenta_nro_cuenta').prepend('<option selected = "false" value = "0" disabled>-- Cuenta --</option>')
            $('#movimiento_cuenta_nro_subcuenta').find('option').remove()
            $('#movimiento_cuenta_nro_subcuenta').prepend('<option selected = "false" value = "0" disabled> -- Subcuenta -- </option>');
            $('#movimiento_cuenta_periodo').find('option').remove()
            $('#movimiento_cuenta_periodo').prepend('<option selected = "false" value = "0" disabled> -- Período -- </option>');
            for (let i = 0; i < mes + 2; i++) {
                $('#movimiento_cuenta_periodo').append('<option value = ' + i + '>' + arr_meses[i] + '</option>');
            }

            cbx_centro_costo.prepend('<option selected = "false" value = "0" disabled> -- Centro de Costo -- </option>');
            cbx_elemento_gasto.prepend('<option selected = "false" value = "0" disabled> -- Elemento de Gasto -- </option>');
            cbx_expediente.prepend('<option selected = "false" value = "0" disabled> -- Expediente -- </option>');
            cbx_almacen.prepend('<option selected = "false" value = "0" disabled> -- Almacén -- </option>');
            cbx_unidad.prepend('<option selected = "false" value = "0" disabled> -- Unidad -- </option>');
            cbx_orden_trabajo.prepend('<option selected = "false" value = "0" disabled> -- Orden de trabajo -- </option>');

            hiddenParents()
            loadingModal.show()
            $.ajax({
                url: '/contabilidad/general/movimiento-cuenta/getDatos',
                method: 'POST',
                dataType: 'json',
                success: function (result) {
                    cuenta = result.cuentas_inventario
                    centro_costo = result.cuentas_inventario
                    $(result.cuentas_inventario).each(function (pos, valor) {
                        $('#movimiento_cuenta_nro_cuenta').append('<option value = "' + valor.nro_cuenta + '">' + valor.nro_cuenta + '</option>');
                    })
                    $(result.elemento_gasto).each(function (pos, valor) {
                        $('#movimiento_cuenta_elemento_gasto').append('<option value = "' + valor.id + '">' + valor.nombre + '</option>');
                    })
                    $(result.centro_costo).each(function (pos, valor) {
                        $('#movimiento_cuenta_centro_costo').append('<option value = "' + valor.id + '">' + valor.nombre + '</option>');
                    })
                    $(result.almacenes).each(function (pos, valor) {
                        $('#movimiento_cuenta_almacen').append('<option value = "' + valor.id + '">' + valor.nombre + '</option>');
                    })
                    $(result.unidad).each(function (pos, valor) {
                        $('#movimiento_cuenta_unidad').append('<option value = "' + valor.id + '">' + valor.nombre + '</option>');
                    })
                    $(result.ordenes).each(function (pos, valor) {
                        $('#movimiento_cuenta_orden_trabajo').append('<option value = "' + valor.id + '">' + valor.nombre + '</option>');
                    })
                    $(result.expedientes).each(function (pos, valor) {
                        $('#movimiento_cuenta_expediente').append('<option value = "' + valor.id + '">' + valor.nombre + '</option>');
                    })
                    loadingModal.close()
                },
                error: function () {
                }
            })
        }

        function getDataByParams() {
            if($('#anno').val() == '')
                $('#anno').val(anno)
            if (form_modal_target.valid()) {
                let params = {
                    'anno': $('#anno').val(),
                    'nro_cuenta': $('#movimiento_cuenta_nro_cuenta').val(),
                    'nro_subcuenta': $('#movimiento_cuenta_nro_subcuenta').val(),
                    'periodo': $('#movimiento_cuenta_periodo').val(),
                    'unidad': $('#movimiento_cuenta_unidad').val(),
                    'orden_trabajo': $('#movimiento_cuenta_orden_trabajo').val(),
                    'centro_costo': $('#movimiento_cuenta_centro_costo').val(),
                    'elemento_gasto': $('#movimiento_cuenta_elemento_gasto').val(),
                    'expediente': $('#movimiento_cuenta_expediente').val(),
                    'almacen': $('#movimiento_cuenta_almacen').val()
                }
                loadingModal.show()
                $.ajax({
                    url: '/contabilidad/general/movimiento-cuenta/getSubmayor',
                    method: 'POST',
                    dataType: 'json',
                    data: params,
                    success: function (result) {
                        if (result.success) {
                            console.log(result)
                            $('#saldo_inicial').show()
                            $('#saldo_inicial').text('saldo inicial: ' + result.saldo_inicial)
                            $('#rows_datos').find('tr').remove()
                            result.datos.forEach(datos => {
                                $('#rows_datos').append(`<tr>
                                    <td style="font-weight:400;"> ${datos['tipo_comprobante']} </td>
                                    <td style="font-weight:400;"> ${datos['nro_comprobante']} </td>
                                    <td style="font-weight:400;" class="text-center"> ${datos['nro_consecutivo']} </td>
                                    <td style="font-weight:400;" class="text-right"> ${datos['debito']} </td>
                                    <td style="font-weight:400;" class="text-right"> ${datos['credito']} </td>
                                    <td style="font-weight:400;" class="text-right"> ${datos['total']} </td>
                                   </tr>`
                                );
                            })
                        }
                        loadingModal.close()
                    }
                })
            }
        }

        hiddenParents()
        resetForm()
    </script>
{% endblock %}